name: Build & Publish Python Package

# Runs automatically when the “Bump version and release” workflow
# (the one that tags and creates the GitHub Release) finishes successfully.
on:
  workflow_run:
    workflows: ["Bump version and release"]  # exact name of the first workflow
    types: [completed]

# Global permissions – keep the minimum needed
permissions:
  contents: read          # checkout
  id-token: write         # OIDC token for PyPI Trusted Publishing

jobs:
  build:
    # Run only if the upstream workflow concluded with “success”
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      # Checkout the exact commit that triggered the upstream workflow
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'   # pin toolchain for reproducibility
          cache: pip               # speed up installs

      - name: Install build backend
        run: python -m pip install --upgrade build

      - name: Build sdist and wheel
        run: python -m build --sdist --wheel

      - name: Twine check (optional but recommended)
        run: |
          python -m pip install --upgrade twine
          twine check dist/*

      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  publish:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest

    # Protected environment (create under repo → Settings → Environments)
    environment:
      name: pypi
      url: https://pypi.org/project/YOURPROJECT/   # ← replace with your real package name

    steps:
      - name: Download dist artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Publish via Trusted Publishing
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          # skip-existing: true   # uncomment to ignore already-uploaded versions